name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest-cov pytest-timeout
    
    - name: Run unit tests
      run: |
        python -m pytest tests/unit -v --timeout=60
      timeout-minutes: 3
    
    - name: Run CloudFormation template tests
      run: |
        python -m pytest tests/cfn -v
      timeout-minutes: 2
    
    - name: Generate coverage report
      run: |
        python -m pytest tests/unit --cov=src --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  code-style:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black
    
    - name: Check code formatting with black
      run: |
        black --check src/ tests/
    
    - name: Lint with flake8
      run: |
        flake8 src/ tests/

  cfn-lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install cfn-lint
      run: |
        python -m pip install --upgrade pip
        pip install cfn-lint
    
    - name: Run cfn-lint
      run: |
        cfn-lint templates/*.yaml 